{"ast":null,"code":"var _jsxFileName = \"/home/kkli2e/Desktop/kkapp/src/App.js\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst fruits = [\"apple\", \"orange\", \"banana\", \"pear\", \"laichi\", \"strawberry\"];\nconst [a, b, c, ...other] = fruits; // equivalent to\n// const a = fruits[0];\n// const b = fruits[1];\n// const c = fruits[2];\n\nconst employees = [{\n  id: 1,\n  name: 'Alice',\n  country: 'Austria'\n}, {\n  id: 2,\n  name: 'Bob',\n  country: 'Belgium'\n}, {\n  id: 3,\n  name: 'Carl',\n  country: 'Canada'\n}, {\n  id: 4,\n  name: 'Dean',\n  country: 'Denmark'\n}, {\n  id: 5,\n  name: 'Ethan',\n  country: 'Egypt'\n}];\nconst employeesReversed = employees.slice().reverse();\n\nfunction Fruit() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: fruits.map(el => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: el\n      }, el.toString(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false);\n}\n\n_c = Fruit;\n\nfunction Listing(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"name: \", props.myobj.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"country: \", props.myobj.country]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Listing;\n\nfunction Employee() {\n  const results = [];\n\n  for (const employee of employeesReversed) {\n    results.push(\n    /*#__PURE__*/\n    // <div key={employee.id}>\n    //   <h2>name: {employee.name}</h2>\n    //   <h2>country: {employee.country}</h2>\n    //   <hr />\n    // </div>\n    _jsxDEV(Listing, {\n      myobj: employee\n    }, employee.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this));\n  } // console.log(results);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hi\",\n    children: results\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = Employee;\n\nfunction Employee1() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: employees.map(element => {\n      /*#__PURE__*/\n      _jsxDEV(Listing, {\n        myobj: element\n      }, element.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this); // return (\n      //   <div>\n      //     <h2>name: {element.name}</h2>\n      //     <h2>country: {element.country}</h2>\n      //     <hr />\n      //   </div>\n      // );\n\n    })\n  }, void 0, false);\n}\n\n_c4 = Employee1;\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Employee1, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Fruit, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Employee, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c5 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Fruit\");\n$RefreshReg$(_c2, \"Listing\");\n$RefreshReg$(_c3, \"Employee\");\n$RefreshReg$(_c4, \"Employee1\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["fruits","a","b","c","other","employees","id","name","country","employeesReversed","slice","reverse","Fruit","map","el","toString","Listing","props","myobj","Employee","results","employee","push","Employee1","element","App"],"sources":["/home/kkli2e/Desktop/kkapp/src/App.js"],"sourcesContent":["import './App.css';\nconst fruits = [\"apple\", \"orange\", \"banana\", \"pear\", \"laichi\", \"strawberry\"];\nconst [a, b, c, ...other] = fruits;\n// equivalent to\n// const a = fruits[0];\n// const b = fruits[1];\n// const c = fruits[2];\n\nconst employees = [\n  { id: 1, name: 'Alice', country: 'Austria' },\n  { id: 2, name: 'Bob', country: 'Belgium' },\n  { id: 3, name: 'Carl', country: 'Canada' },\n  { id: 4, name: 'Dean', country: 'Denmark' },\n  { id: 5, name: 'Ethan', country: 'Egypt' },\n];\nconst employeesReversed = employees.slice().reverse();\n\nfunction Fruit() {\n  return (\n    <>\n      {fruits.map(el => {\n        return (\n          <div key={el.toString()} >{el}</div>\n        );\n      })}\n    </>\n\n  );\n\n}\n\nfunction Listing(props) {\n  return (\n    <div>\n      <h2>name: {props.myobj.name}</h2>\n      <h2>country: {props.myobj.country}</h2>\n      <hr />\n    </div>\n  );\n}\nfunction Employee() {\n  const results = [];\n  for (const employee of employeesReversed) {\n    results.push(\n      // <div key={employee.id}>\n      //   <h2>name: {employee.name}</h2>\n      //   <h2>country: {employee.country}</h2>\n      //   <hr />\n      // </div>\n      <Listing myobj={employee} key={employee.id} />\n    );\n  }\n  // console.log(results);\n  return (\n    <div className=\"hi\">\n      {results}\n    </div>\n  );\n}\n\nfunction Employee1() {\n  return (\n    <>\n      {employees.map(element => {\n        <Listing myobj={element} key={element.id} />\n        // return (\n        //   <div>\n        //     <h2>name: {element.name}</h2>\n        //     <h2>country: {element.country}</h2>\n        //     <hr />\n        //   </div>\n        // );\n      })}\n    </>\n  );\n}\n\nfunction App() {\n  return (\n    <>\n      <Employee1 />\n      <Fruit />\n      <Employee />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAO,WAAP;;;AACA,MAAMA,MAAM,GAAG,CAAC,OAAD,EAAU,QAAV,EAAoB,QAApB,EAA8B,MAA9B,EAAsC,QAAtC,EAAgD,YAAhD,CAAf;AACA,MAAM,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAU,GAAGC,KAAb,IAAsBJ,MAA5B,C,CACA;AACA;AACA;AACA;;AAEA,MAAMK,SAAS,GAAG,CAChB;EAAEC,EAAE,EAAE,CAAN;EAASC,IAAI,EAAE,OAAf;EAAwBC,OAAO,EAAE;AAAjC,CADgB,EAEhB;EAAEF,EAAE,EAAE,CAAN;EAASC,IAAI,EAAE,KAAf;EAAsBC,OAAO,EAAE;AAA/B,CAFgB,EAGhB;EAAEF,EAAE,EAAE,CAAN;EAASC,IAAI,EAAE,MAAf;EAAuBC,OAAO,EAAE;AAAhC,CAHgB,EAIhB;EAAEF,EAAE,EAAE,CAAN;EAASC,IAAI,EAAE,MAAf;EAAuBC,OAAO,EAAE;AAAhC,CAJgB,EAKhB;EAAEF,EAAE,EAAE,CAAN;EAASC,IAAI,EAAE,OAAf;EAAwBC,OAAO,EAAE;AAAjC,CALgB,CAAlB;AAOA,MAAMC,iBAAiB,GAAGJ,SAAS,CAACK,KAAV,GAAkBC,OAAlB,EAA1B;;AAEA,SAASC,KAAT,GAAiB;EACf,oBACE;IAAA,UACGZ,MAAM,CAACa,GAAP,CAAWC,EAAE,IAAI;MAChB,oBACE;QAAA,UAA2BA;MAA3B,GAAUA,EAAE,CAACC,QAAH,EAAV;QAAA;QAAA;QAAA;MAAA,QADF;IAGD,CAJA;EADH,iBADF;AAWD;;KAZQH,K;;AAcT,SAASI,OAAT,CAAiBC,KAAjB,EAAwB;EACtB,oBACE;IAAA,wBACE;MAAA,qBAAWA,KAAK,CAACC,KAAN,CAAYX,IAAvB;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,wBAAcU,KAAK,CAACC,KAAN,CAAYV,OAA1B;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;;MARQQ,O;;AAST,SAASG,QAAT,GAAoB;EAClB,MAAMC,OAAO,GAAG,EAAhB;;EACA,KAAK,MAAMC,QAAX,IAAuBZ,iBAAvB,EAA0C;IACxCW,OAAO,CAACE,IAAR;IAAA;IACE;IACA;IACA;IACA;IACA;IACA,QAAC,OAAD;MAAS,KAAK,EAAED;IAAhB,GAA+BA,QAAQ,CAACf,EAAxC;MAAA;MAAA;MAAA;IAAA,QANF;EAQD,CAXiB,CAYlB;;;EACA,oBACE;IAAK,SAAS,EAAC,IAAf;IAAA,UACGc;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;MAlBQD,Q;;AAoBT,SAASI,SAAT,GAAqB;EACnB,oBACE;IAAA,UACGlB,SAAS,CAACQ,GAAV,CAAcW,OAAO,IAAI;MACxB;MAAA,QAAC,OAAD;QAAS,KAAK,EAAEA;MAAhB,GAA8BA,OAAO,CAAClB,EAAtC;QAAA;QAAA;QAAA;MAAA,SADwB,CAExB;MACA;MACA;MACA;MACA;MACA;MACA;;IACD,CATA;EADH,iBADF;AAcD;;MAfQiB,S;;AAiBT,SAASE,GAAT,GAAe;EACb,oBACE;IAAA,wBACE,QAAC,SAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,KAAD;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,QAAD;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA,gBADF;AAOD;;MARQA,G;AAUT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}